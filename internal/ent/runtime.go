// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/efectn/fiber-boilerplate/internal/ent/article"
	"github.com/efectn/fiber-boilerplate/internal/ent/category"
	"github.com/efectn/fiber-boilerplate/internal/ent/game"
	"github.com/efectn/fiber-boilerplate/internal/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescCreatedAt is the schema descriptor for created_at field.
	articleDescCreatedAt := articleFields[2].Descriptor()
	// article.DefaultCreatedAt holds the default value on creation for the created_at field.
	article.DefaultCreatedAt = articleDescCreatedAt.Default.(func() time.Time)
	// articleDescUpdatedAt is the schema descriptor for updated_at field.
	articleDescUpdatedAt := articleFields[3].Descriptor()
	// article.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	article.DefaultUpdatedAt = articleDescUpdatedAt.Default.(func() time.Time)
	// article.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	article.UpdateDefaultUpdatedAt = articleDescUpdatedAt.UpdateDefault.(func() time.Time)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryFields[3].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryFields[4].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() time.Time)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// categoryDescDeletedAt is the schema descriptor for deleted_at field.
	categoryDescDeletedAt := categoryFields[5].Descriptor()
	// category.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	category.DefaultDeletedAt = categoryDescDeletedAt.Default.(func() time.Time)
	// category.UpdateDefaultDeletedAt holds the default value on update for the deleted_at field.
	category.UpdateDefaultDeletedAt = categoryDescDeletedAt.UpdateDefault.(func() time.Time)
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescCreatedAt is the schema descriptor for created_at field.
	gameDescCreatedAt := gameFields[2].Descriptor()
	// game.DefaultCreatedAt holds the default value on creation for the created_at field.
	game.DefaultCreatedAt = gameDescCreatedAt.Default.(func() time.Time)
	// gameDescUpdatedAt is the schema descriptor for updated_at field.
	gameDescUpdatedAt := gameFields[3].Descriptor()
	// game.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	game.DefaultUpdatedAt = gameDescUpdatedAt.Default.(func() time.Time)
	// game.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	game.UpdateDefaultUpdatedAt = gameDescUpdatedAt.UpdateDefault.(func() time.Time)
	// gameDescDeletedAt is the schema descriptor for deleted_at field.
	gameDescDeletedAt := gameFields[4].Descriptor()
	// game.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	game.DefaultDeletedAt = gameDescDeletedAt.Default.(func() time.Time)
	// game.UpdateDefaultDeletedAt holds the default value on update for the deleted_at field.
	game.UpdateDefaultDeletedAt = gameDescDeletedAt.UpdateDefault.(func() time.Time)
}
